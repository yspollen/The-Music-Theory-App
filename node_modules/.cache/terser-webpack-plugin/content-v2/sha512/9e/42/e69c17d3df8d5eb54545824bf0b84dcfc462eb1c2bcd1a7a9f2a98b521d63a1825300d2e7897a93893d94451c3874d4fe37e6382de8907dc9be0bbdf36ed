{"map":"{\"version\":3,\"sources\":[\"/Users/ericspollen/Desktop/The-Music-Theory-App/src/App.js\",\"/Users/ericspollen/Desktop/The-Music-Theory-App/src/serviceWorker.js\",\"/Users/ericspollen/Desktop/The-Music-Theory-App/src/index.js\",\"/Users/ericspollen/Desktop/The-Music-Theory-App/node_modules/url-loader/dist/cjs.js??ref--6-oneOf-0!/Users/ericspollen/Desktop/The-Music-Theory-App/src/kelpy.png\"],\"names\":[\"App\",\"react_default\",\"a\",\"createElement\",\"className\",\"src\",\"kelpy\",\"alt\",\"class\",\"Component\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App_0\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\",\"module\",\"exports\",\"__webpack_require__\",\"p\"],\"mappings\":\"yOAmDeA,0LA7CX,OACEC,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,SAAA,CAAQC,UAAU,cAChBH,EAAAC,EAAAC,cAAA,KAAA,KAAA,wBAGAF,EAAAC,EAAAC,cAAA,MAAA,CAAKE,IAAKC,EAAAA,EAAOF,UAAU,QAAQG,IAAI,gBAEzCN,EAAAC,EAAAC,cAAA,OAAA,KACEF,EAAAC,EAAAC,cAAA,KAAA,KAAA,aAGAF,EAAAC,EAAAC,cAAA,KAAA,KAAA,uCAIAF,EAAAC,EAAAC,cAAA,KAAA,KACEF,EAAAC,EAAAC,cAAA,SAAA,CAAQK,MAAM,QAAd,KACAP,EAAAC,EAAAC,cAAA,SAAA,CAAQK,MAAM,QAAd,KACAP,EAAAC,EAAAC,cAAA,SAAA,CAAQK,MAAM,QAAd,KACAP,EAAAC,EAAAC,cAAA,SAAA,CAAQK,MAAM,QAAd,KACAP,EAAAC,EAAAC,cAAA,SAAA,CAAQK,MAAM,QAAd,KACAP,EAAAC,EAAAC,cAAA,SAAA,CAAQK,MAAM,QAAd,KACAP,EAAAC,EAAAC,cAAA,SAAA,CAAQK,MAAM,QAAd,KACAP,EAAAC,EAAAC,cAAA,KAAA,MACAF,EAAAC,EAAAC,cAAA,KAAA,MACAF,EAAAC,EAAAC,cAAA,SAAA,CAAQK,MAAM,cAAd,UACAP,EAAAC,EAAAC,cAAA,SAAA,CAAQK,MAAM,cAAd,UACAP,EAAAC,EAAAC,cAAA,SAAA,CAAQK,MAAM,cAAd,WAEFP,EAAAC,EAAAC,cAAA,KAAA,KACEF,EAAAC,EAAAC,cAAA,SAAA,CAAQK,MAAM,SAAd,UAEFP,EAAAC,EAAAC,cAAA,KAAA,KAAA,oBAGAF,EAAAC,EAAAC,cAAA,KAAA,KAAA,4BAtCQM,EAAAA,YCQEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,EAAAA,EAASC,OAAOf,EAAAC,EAAAC,cAACc,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,kCEnInBC,EAAAC,QAAiBC,EAAAC,EAAuB\",\"sourcesContent\":[\"import React, { Component } from 'react';\\nimport kelpy from './kelpy.png';\\nimport './App.css';\\n\\nclass App extends Component {\\n  render() {\\n    return (\\n      <div className=\\\"App\\\">\\n        <header className=\\\"App-header\\\">\\n          <h4>\\n            The Music Theory App\\n          </h4>\\n          <img src={kelpy} className=\\\"kelpy\\\" alt=\\\"it's kelpy\\\"/>\\n        </header>\\n        <body>\\n          <h1>\\n            [CDEFGAB]\\n          </h1>\\n          <h1>\\n            [I III V VII][♮ ♭ ♯]\\n          </h1>\\n\\n          <h3>\\n            <button class=\\\"root\\\">C</button>\\n            <button class=\\\"root\\\">D</button>\\n            <button class=\\\"root\\\">E</button>\\n            <button class=\\\"root\\\">F</button>\\n            <button class=\\\"root\\\">G</button>\\n            <button class=\\\"root\\\">A</button>\\n            <button class=\\\"root\\\">B</button>\\n            <br></br>\\n            <br></br>\\n            <button class=\\\"accidental\\\">♭</button>\\n            <button class=\\\"accidental\\\">♮</button>\\n            <button class=\\\"accidental\\\">♯</button>\\n           </h3>\\n          <h2>\\n            <button class=\\\"check\\\">check</button>\\n          </h2>\\n          <h5>\\n            sí, correcto!\\n          </h5>\\n          <h6>\\n            no, incorrecto!\\n          </h6>\\n        </body>\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default App;\\n\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: https://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\",\"module.exports = __webpack_public_path__ + \\\"static/media/kelpy.c3df38dd.png\\\";\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{15:function(e,t,a){},16:function(e,t,a){},17:function(e,t,a){\"use strict\";a.r(t);var n=a(0),c=a.n(n),l=a(2),o=a.n(l),r=(a(15),a(3)),s=a(4),u=a(7),i=a(5),m=a(8),E=a(6),h=a.n(E),b=(a(16),function(e){function t(){return Object(r.a)(this,t),Object(u.a)(this,Object(i.a)(t).apply(this,arguments))}return Object(m.a)(t,e),Object(s.a)(t,[{key:\"render\",value:function(){return c.a.createElement(\"div\",{className:\"App\"},c.a.createElement(\"header\",{className:\"App-header\"},c.a.createElement(\"h4\",null,\"The Music Theory App\"),c.a.createElement(\"img\",{src:h.a,className:\"kelpy\",alt:\"it's kelpy\"})),c.a.createElement(\"body\",null,c.a.createElement(\"h1\",null,\"[CDEFGAB]\"),c.a.createElement(\"h1\",null,\"[I III V VII][\\u266e \\u266d \\u266f]\"),c.a.createElement(\"h3\",null,c.a.createElement(\"button\",{class:\"root\"},\"C\"),c.a.createElement(\"button\",{class:\"root\"},\"D\"),c.a.createElement(\"button\",{class:\"root\"},\"E\"),c.a.createElement(\"button\",{class:\"root\"},\"F\"),c.a.createElement(\"button\",{class:\"root\"},\"G\"),c.a.createElement(\"button\",{class:\"root\"},\"A\"),c.a.createElement(\"button\",{class:\"root\"},\"B\"),c.a.createElement(\"br\",null),c.a.createElement(\"br\",null),c.a.createElement(\"button\",{class:\"accidental\"},\"\\u266d\"),c.a.createElement(\"button\",{class:\"accidental\"},\"\\u266e\"),c.a.createElement(\"button\",{class:\"accidental\"},\"\\u266f\")),c.a.createElement(\"h2\",null,c.a.createElement(\"button\",{class:\"check\"},\"check\")),c.a.createElement(\"h5\",null,\"s\\xed, correcto!\"),c.a.createElement(\"h6\",null,\"no, incorrecto!\")))}}]),t}(n.Component));Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));o.a.render(c.a.createElement(b,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})},6:function(e,t,a){e.exports=a.p+\"static/media/kelpy.c3df38dd.png\"},9:function(e,t,a){e.exports=a(17)}},[[9,1,2]]]);","extractedComments":[]}